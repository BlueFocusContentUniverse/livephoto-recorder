/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LivpRouteImport } from './routes/livp'
import { Route as LivephotoRouteImport } from './routes/livephoto'
import { Route as BatchGenerateRouteImport } from './routes/batch-generate'
import { Route as IndexRouteImport } from './routes/index'

const LivpRoute = LivpRouteImport.update({
  id: '/livp',
  path: '/livp',
  getParentRoute: () => rootRouteImport,
} as any)
const LivephotoRoute = LivephotoRouteImport.update({
  id: '/livephoto',
  path: '/livephoto',
  getParentRoute: () => rootRouteImport,
} as any)
const BatchGenerateRoute = BatchGenerateRouteImport.update({
  id: '/batch-generate',
  path: '/batch-generate',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/batch-generate': typeof BatchGenerateRoute
  '/livephoto': typeof LivephotoRoute
  '/livp': typeof LivpRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/batch-generate': typeof BatchGenerateRoute
  '/livephoto': typeof LivephotoRoute
  '/livp': typeof LivpRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/batch-generate': typeof BatchGenerateRoute
  '/livephoto': typeof LivephotoRoute
  '/livp': typeof LivpRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/batch-generate' | '/livephoto' | '/livp'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/batch-generate' | '/livephoto' | '/livp'
  id: '__root__' | '/' | '/batch-generate' | '/livephoto' | '/livp'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BatchGenerateRoute: typeof BatchGenerateRoute
  LivephotoRoute: typeof LivephotoRoute
  LivpRoute: typeof LivpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/livp': {
      id: '/livp'
      path: '/livp'
      fullPath: '/livp'
      preLoaderRoute: typeof LivpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/livephoto': {
      id: '/livephoto'
      path: '/livephoto'
      fullPath: '/livephoto'
      preLoaderRoute: typeof LivephotoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/batch-generate': {
      id: '/batch-generate'
      path: '/batch-generate'
      fullPath: '/batch-generate'
      preLoaderRoute: typeof BatchGenerateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BatchGenerateRoute: BatchGenerateRoute,
  LivephotoRoute: LivephotoRoute,
  LivpRoute: LivpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
